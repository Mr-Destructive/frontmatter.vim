*frontmatter.txt* Functionality for writing SSG blog frontmatters 

 _____                _                   _   _
|  ___| __ ___  _ __ | |_ _ __ ___   __ _| |_| |_ ___ _ __
| |_ | '__/ _ \| '_ \| __| '_ ` _ \ / _` | __| __/ _ \ '__|
|  _|| | | (_) | | | | |_| | | | | | (_| | |_| ||  __/ |
|_|  |_|  \___/|_| |_|\__|_| |_| |_|\__,_|\__|\__\___|_|


Autofill frontmatter for a given Static Site Generator.

====================================================================
CONTENTS                                           *frontamattertoc*

    1. Usage ................ |FrontmatterUsage|
    2. Mappings ............. |FrontmatterMappings|

====================================================================
Section 1: Usage                                   *FrontmatterUsage*

Fronmatter.vim plugin automatically creates the list of frontmatter 
keys like title, date, description, layout and so on. 

To automatically write frontmatter keys for a particular SSG, write 
the name of the SSG (jekyll, gatsby, hugo, markata) and select the 
text with Visual mode(should only contain the SSG name). Any Newline 
character or whitespaces are trimmed automically.
Comeback to normal mode by pressing <ESC>
Simply call the function Frontmatter() in command mode like:
    :call Frontmatter()

This will generate the frontmatter keys.


====================================================================
Section 2: Mappings                            *FrontmatterMappings*

To create a map, we can map the function call to a key as any valid
key combination. In this case I have mapped the keys fm to invoke 
the function and generate the frontmatter.

    nnoremap fm :call Frontmatter()<cr>

====================================================================
